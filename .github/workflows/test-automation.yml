name: NinjaOne Test Automation

on:
  schedule:
    # Runs at 13:00 UTC (9:00 AM EST) every day
    - cron: '0 13 * * *'
  workflow_dispatch:  # Keeps manual trigger option

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium

    - name: Create directories for artifacts
      run: |
        mkdir -p test-results
        mkdir -p playwright-report
        mkdir -p screenshots

    - name: Create .env file
      run: |
        echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
        echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env

    - name: Create token.json
      run: |
        echo '${{ secrets.GMAIL_TOKEN }}' > token.json

    - name: Run Cucumber tests with HTML report
      run: |
        npx cucumber-js \
          src/test/features/login.feature \
          --format html:playwright-report/cucumber-report.html \
          --format json:test-results/cucumber-report.json \
          --format summary
      env:
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      continue-on-error: true

    - name: List artifacts
      if: always()
      run: |
        echo "Contents of current directory:"
        ls -la
        echo "Contents of test-results:"
        ls -la test-results || echo "test-results not found"
        echo "Contents of playwright-report:"
        ls -la playwright-report || echo "playwright-report not found"
        echo "Contents of screenshots:"
        ls -la screenshots || echo "screenshots not found"

    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test-results/
          playwright-report/
          screenshots/
        retention-days: 30

    - name: Deploy report to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./playwright-report
        publish_branch: gh-pages 