name: NinjaOne Test Automation

on:
  schedule:
    # Runs at 13:00 UTC (9:00 AM EST) every day
    - cron: '0 13 * * *'
  workflow_dispatch:  # Keeps manual trigger option

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: List directory contents
      run: ls -la

    - name: Install dependencies
      run: |
        npm ci
        npm list multiple-cucumber-html-reporter

    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium

    - name: Create directories for artifacts
      run: |
        mkdir -p test-results
        mkdir -p playwright-report/cucumber-report
        mkdir -p screenshots
        ls -la

    - name: Create .env file
      run: |
        echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
        echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env

    - name: Create token.json
      run: |
        echo '${{ secrets.GMAIL_TOKEN }}' > token.json

    - name: Run Cucumber tests
      run: npx cucumber-js src/test/features/login.feature --format html:cucumber-report.html --format json:test-results/cucumber-report.json
      env:
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      continue-on-error: true

    - name: Generate detailed HTML report
      if: always()
      run: |
        echo "Creating report generation script..."
        cat << 'EOF' > generate-report.js
        const report = require('multiple-cucumber-html-reporter');
        report.generate({
          jsonDir: 'test-results',
          reportPath: './playwright-report/cucumber-report',
          metadata: {
            browser: {
              name: 'chromium',
              version: '118'
            },
            device: 'GitHub Actions - Ubuntu',
            platform: {
              name: 'ubuntu',
              version: '22.04'
            }
          },
          customData: {
            title: 'Test Execution Info',
            data: [
              { label: 'Project', value: 'NinjaOne Automation' },
              { label: 'Release', value: '1.0.0' },
              { label: 'Execution Start Time', value: new Date().toISOString() },
              { label: 'Execution End Time', value: new Date().toISOString() }
            ]
          },
          displayDuration: true,
          durationInMS: true,
          displayReportTime: true,
          disableLog: false,
          pageTitle: 'NinjaOne Test Automation Report',
          reportName: 'NinjaOne Test Automation Report',
          pageFooter: '<div class="created-by">Created by Test Automation Team</div>'
        });
        EOF
        echo "Running report generation script..."
        node generate-report.js

    - name: List artifacts before upload
      if: always()
      run: |
        echo "Contents of current directory:"
        ls -la
        echo "Contents of test-results:"
        ls -la test-results || echo "test-results not found"
        echo "Contents of playwright-report:"
        ls -la playwright-report || echo "playwright-report not found"
        echo "Contents of screenshots:"
        ls -la screenshots || echo "screenshots not found"

    - name: Upload Cucumber HTML report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cucumber-report
        path: |
          cucumber-report.html
          playwright-report/cucumber-report/**
        retention-days: 30

    - name: Upload test results and screenshots
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test-results/
          playwright-report/
          screenshots/
        retention-days: 30

    - name: Deploy report to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./playwright-report
        publish_branch: gh-pages 